import os
import sys
from scrapy.conf import settings
PATH = settings.get("PATH")+"icrawler/icrawler/mining/learning/"
 
p_flag = False
n_flag = False
b_flag = False

positives = {} #{"word1":{"typ":"", "pos1":"", "priorpolarity":}}
negatives = {} #{"word1":{"type":"", "pos1":"", "priorpolarity":}} 
emoticons_file = open(PATH + "datasets/emoticons.data","r")
lines = emoticons_file.readlines()

def patch_emoticons():
    global p_flag, n_flag, b_flag
    
    for line in lines:
        if line.startswith("positive"):
            "Parsing Positives...." 
            p_flag = True    
            n_flag = False
            
        elif line.startswith("negative"):
            "Parsing Negatives...."
            n_flag = True
            p_flag = False
            
        elif line.startswith("bad_words"):
            n_flag = False
            p_flag = False
            b_flag = True
            
        
        if p_flag and not line.startswith("positive"):
            p_data = line.split(" ")
            for data in p_data:
                positives[data] = {"type":"strongsub", "emoticon" : True, "pos1":"anypos", "priorpolarity":"positive"}   
        
        if n_flag and not line.startswith("negative"):
            n_data = line.split(" ")
            for data in n_data:
                negatives[data] = {"type":"strongsub", "emoticon" : True, "pos1":"anypos", "priorpolarity":"negative"}
                        
        if b_flag and not line.startswith("bad_words"):
            word = line.replace("\n", "")
            negatives[word] = {"type":"strongsub", "pos1":"anypos", "priorpolarity":"negative"}
    
    #print "POS", len(positives.keys())
    #print "NEG", len(negatives.keys())
    
    totals = dict(positives, **negatives)
    
    #print "TOTALS ", len(totals)
    return totals
    
def parse_dataset(filename):    

    parsed_data = []
    dataset = open(os.path.abspath("") +"/"+ filename,"r")
    lines = dataset.readlines()
    
    for line in lines:
        parsed_data.append(line.replace("\n", ""))
        
    #print len(parsed_data)
    return parsed_data

#patch_emoticons()
        
                
    
        
        
        


